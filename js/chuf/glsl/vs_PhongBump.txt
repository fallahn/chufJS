/////////////////////////////////////////////////////////
// vertex shader for normal mapping with phong highlights
/////////////////////////////////////////////////////////

//GLES 1.0 / WebGL

#version 100

attribute vec3 aPosition;
attribute vec2 aTexCoord;
attribute vec3 aNormal;
attribute vec3 aTan;
attribute vec3 aBitan;

uniform mat4 uMMat;
uniform mat4 uPMat;
uniform mat4 uVMat; //camera transform
uniform mat3 uNMat;
uniform mat4 uBiasMat;
uniform mat4 uLightVMat;
uniform vec3 uLightPosition;

varying vec3 vLightVec;
varying vec3 vEyeVec;
varying vec2 vTexCoord;
varying vec4 vShadowPosition;

void main(void)
{
	vShadowPosition =  uBiasMat * uPMat * uLightVMat * uMMat * vec4(aPosition, 1.0);	
	vec4 viewVert = uVMat * uMMat * vec4(aPosition, 1.0);
	gl_Position = uPMat * viewVert;
	vTexCoord = aTexCoord;

	vec3 n = normalize(uNMat * aNormal);
	vec3 t = normalize(uNMat * aTan);
	vec3 b = normalize(uNMat * aBitan);
	mat3 tbn = mat3(t, b, n);

	vec3 temp = uLightPosition - viewVert.xyz;
	vLightVec = temp * tbn;

	temp = -viewVert.xyz;
	vEyeVec = temp * tbn;
}
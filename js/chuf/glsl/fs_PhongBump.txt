/////////////////////////////////////////////////////
// normal map shader with phong specular highlighting
/////////////////////////////////////////////////////

//GLES 1.0 / WebGL

#version 100
precision mediump float;
varying vec2 vTexCoord;
varying vec3 vLightVec;
varying vec3 vEyeVec;

uniform sampler2D uColourMap;
uniform sampler2D uSpecularMap;
uniform sampler2D uNormalMap;
uniform vec3 uSpecularColour;
uniform vec3 uDiffuseColour;
uniform vec3 uAmbientColour;

void main(void)
{
	vec4 baseColour = texture2D(uColourMap, vTexCoord.xy);
	vec3 bump = normalize(texture2D(uNormalMap, vTexCoord.xy).xyz * 2.0 - 1.0);

	vec3 lightDir = normalize(vLightVec);
	vec3 eyeDir = normalize(vEyeVec);
	vec3 reflectDir = reflect(-lightDir, bump);

	float specAmount = 0.0;
	float diffuseAmount = max(dot(bump, lightDir), 0.0);
	if(diffuseAmount > 0.0)
	{
		vec4 specSample = texture2D(uSpecularMap, vTexCoord.xy);
		specAmount = pow(max(dot(reflectDir, eyeDir), 0.0), specSample.g * 255.0) * specSample.r;
	}

	vec3 finalColour = uAmbientColour + (baseColour.rgb * diffuseAmount) + (uSpecularColour * specAmount);
	gl_FragColor = vec4(finalColour, baseColour.a);
}